import urllib.request
from os.path import expanduser
import time
import os
import ctypes

def main():
    #Global Variables
    directory = expanduser(r'~') + r'\Pictures\CuratedWallpaper'
    saveLocation = directory + r'\CWP_'
    delay = 1
    displayarray = []
    goodurllist = []

    file = open(directory + r'\f.txt', 'r')
    urls = file.read().split('\n') #line delimite urls and store in array
    file.close()


    def makedir(directory):
        if not os.path.exists(directory):
            os.makedirs(directory)
    def changeBG(Path):
        SPI_SETDESKWALLPAPER = 20
        ctypes.windll.user32.SystemParametersInfoW(SPI_SETDESKWALLPAPER, 0, Path , 0)
        SPIF_UPDATEINIFILE = 0x2
    def downloadimages(imageurls): #takes in an array of images
        _countertotal = len(imageurls)
        _counter = 0
        for i in imageurls:
            filename = saveLocation + i.split('/')[-1]
            displayarray.append(filename)
            urllib.request.urlretrieve(i, filename)
            _counter += 1
            print("Downloading: {} of {}".format(_counter, _countertotal))
    #build in more error checking. if line has no url etc
    def is_downloadable(url):
        _url = url
        req = urllib.request.Request(_url)
        req.get_method = lambda: 'HEAD'
        try:
            urllib.request.urlopen(req)
            goodurllist.append(_url)
            print('{} succeeded'.format(_url))
        except urllib.request.HTTPError:
            print('{} failed'.format(_url))



    makedir(directory)
    for i in urls:
        is_downloadable(i)
    """
    print('*testing downloadability*')
    for j in urls:
        check = is_downloadable(j)
        if check == True:
            goodurllist.append(j)
    """
    downloadimages(goodurllist)

    #downloadimages(rls) to see is_downloadable working

    for i in displayarray:
        changeBG(i)
        time.sleep(delay)

if __name__ == '__main__': main()

